# create step :- PersistentVolume , Persistent-volume-claim , statefulset , service(headless) , config

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-persistentVolume
spec:
  capacity:
    storage: 1Gi    #1gb
  accessModes:
    - ReadWriteOnce
  storageClassName: manual    #name of stroage-class-name
  hostPath:
    path:  give your local machine path where you want to sotre your volume  #/your/local/path/mysql-data
    type: DirectoryOrCreate

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-persistentVolume-Claim
spec:
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
  accessModes:
    - ReadWriteOnce

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: "mysql"
  replicas: 2
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
        volumeMounts:
        - name: mysql-persistent-volume-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-volume-storage
        persistentVolumeClaim:
          claimName: mysql-persistent-volume-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-configmap

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-inti-db-configmap
data:
  init.sql: |
      CREATE DATABASE IF NOT EXIST  orderdb;
      CREATE DATABASE IF NOT EXIST  paymentdb;

---

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: cm9vdA==   # "root" base64 encoded

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service-svc
spec:
  clusterIP: None 
  selector:
    app: mysql
  ports:
  - port: 3306


